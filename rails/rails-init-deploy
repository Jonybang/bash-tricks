#!/bin/bash

user="deploy"
server="jonybang.ru"

scm_site="github.com"

git_user="$( git config --get user.name )"
git_repo="$( basename `git rev-parse --show-toplevel` )"

app_name="$( echo 'rails-angular-todo-list'|tr '-' '_' )"

app_dir_path="/home/deploy/apps/$app_name"

echo -n "Enter subdomain for app(subdomain.$server) and press [ENTER]: " 
read subdomain

echo "
	group :development do
		gem 'capistrano',         require: false
		gem 'capistrano-rvm',     require: false
		gem 'capistrano-rails',   require: false
		gem 'capistrano-bundler', require: false
		gem 'capistrano3-puma',   require: false
		gem 'capistrano-secrets-yml', '~> 1.0.0'
		gem 'capistrano-postgresql'
	end

	gem 'pg'

	gem 'puma'
	gem 'dotenv-rails', :require => 'dotenv/rails-now'
" >> Gemfile

bundle

cap install

echo "
	require 'capistrano/setup'

	require 'capistrano/deploy'
	require 'capistrano/rvm'
	require 'capistrano/bundler'
	require 'capistrano/rails/assets'
	require 'capistrano/rails/migrations'
	require 'capistrano/puma'
	require 'capistrano/secrets_yml'
	require 'capistrano/postgresql'

	Dir.glob('lib/capistrano/tasks/*.rake').each { |r| import r }
" > Capfile

echo "
	server '$server', roles: [:web, :app, :db], primary: true

	set :repo_url,        'git@$scm_site:$git_user/$git_repo.git'
	set :application,     '$app_name'
	set :user,            '$user'
	set :puma_threads,    [4, 16]
	set :puma_workers,    0
	set :assets_roles, 		[:web, :app]

	#set :pg_user, '$user'

	# Don't change these unless you know what you're doing
	set :pty,             true
	set :use_sudo,        false
	set :stage,           :production
	set :deploy_via,      :remote_cache
	set :deploy_to,       \"/home/#{fetch(:user)}/apps/#{fetch(:application)}\"
	set :puma_bind,       \"unix://#{shared_path}/tmp/sockets/#{fetch(:application)}-puma.sock\"
	set :puma_state,      \"#{shared_path}/tmp/pids/puma.state\"
	set :puma_pid,        \"#{shared_path}/tmp/pids/puma.pid\"
	set :puma_access_log, \"#{release_path}/log/puma.error.log\"
	set :puma_error_log,  \"#{release_path}/log/puma.access.log\"
	set :ssh_options,     { forward_agent: true, user: fetch(:user), keys: %w(~/.ssh/id_rsa.pub) }
	set :puma_preload_app, true
	set :puma_worker_timeout, nil
	set :puma_init_active_record, true  # Change to false when not using ActiveRecord

	## Defaults:
	set :scm,           :git
	set :branch,        :master
	# set :format,        :pretty
	# set :log_level,     :debug
	# set :keep_releases, 5

	## Linked Files & Directories (Default None):
	set :linked_files, %w{config.database.yml .env.production}
	set :linked_dirs,  %w{log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system}

	namespace :puma do
		desc 'Create Directories for Puma Pids and Socket'
		task :make_dirs do
		  on roles(:app) do
		    execute \"mkdir #{shared_path}/tmp/sockets -p\"
		    execute \"mkdir #{shared_path}/tmp/pids -p\"
		  end
		end

		before :start, :make_dirs
	end

	namespace :deploy do
		desc 'Make sure local git is in sync with remote.'
		task :check_revision do
		  on roles(:app) do
		    unless \`git rev-parse HEAD\` == \`git rev-parse origin/master\`
		      puts 'WARNING: HEAD is not the same as origin/master'
		      puts 'Run \`git push\` to sync changes.'
		      exit
		    end
		  end
		end

		desc 'Initial Deploy'
		task :initial do
		  on roles(:app) do
		    before 'deploy:restart', 'puma:start'
		    invoke 'deploy'
		  end
		end

		desc 'Restart application'
		task :restart do
		  on roles(:app), in: :sequence, wait: 5 do
		    invoke 'puma:restart'
		  end
		end

		desc 'Runs rake db:seed'
		task :seed => [:set_rails_env] do
			on primary fetch(:migration_role) do
				within release_path do
				  with rails_env: fetch(:rails_env) do
				    execute :rake, "db:seed"
				  end
				end
			end
		end

		before :starting,     :check_revision
		after  :finishing,    :compile_assets
		after  :finishing,    :cleanup
		after  :finishing,    :restart
	end

	# ps aux | grep puma    # Get puma pid
	# kill -s SIGUSR2 pid   # Restart puma
	# kill -s SIGTERM pid   # Stop puma

" > config/deploy.rb

echo "
	upstream puma_$app_name {
		server unix:///home/deploy/apps/$app_name/shared/tmp/sockets/$app_name-puma.sock;
	}

	server {
		listen 80;
		server_name $subdomain.jonybang.ru;

		root $app_dir_path/current/public;
		access_log $app_dir_path/current/log/nginx.access.log;
		error_log $app_dir_path/current/log/nginx.error.log info;

		location ^~ /assets/ {
		  gzip_static on;
		  expires max;
		  add_header Cache-Control public;
		}

		try_files \$uri/index.html \$uri @puma;
		location @puma {
		  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
		  proxy_set_header Host \$http_host;
		  proxy_redirect off;

		  proxy_pass http://puma_$app_name;
		}

		error_page 500 502 503 504 /500.html;
		client_max_body_size 10M;
		keepalive_timeout 10;
	}
" > config/nginx.conf

git rm --cached config/secrets.yml
echo 'config/secrets.yml' >> .gitignore

git add -A
git commit -m "Prepare for first deploy"
git push origin master

cap production deploy:initial

secret="$(rake secret)"
ssh $user@$server "mkdir $app_dir_path/shared; echo 'SECRET_KEY_BASE=$secret' > $app_dir_path/shared/.env.production"

bundle exec cap production setup

ssh $user@$server "sudo ln -s $app_dir_path/current/config/nginx.conf /etc/nginx/sites-enabled/$app_name"

rake assets:precompile RAILS_ENV=production

cap production deploy

cap production deploy:seed

ssh $user@$server "sudo service nginx restart"

